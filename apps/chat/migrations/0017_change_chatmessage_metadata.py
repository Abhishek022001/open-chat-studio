# Generated by Django 4.2.14 on 2024-07-24 07:25

from django.db import migrations

def flatten_files_in_chat_message_metadata(apps, schema_editor):
    """
    Existing metadata structure example:
    {"code_interpreter": ["file_id1", "file_id2"], "file_search": ["file_id3"]}

    New structure:
    {"openai_file_ids": ["file_id1", "file_id2", "file_id3"]}

    This migration will not remove the existing data. It should not interfere with anything, so it's safe to keep
    it.
    """

    ChatMessage = apps.get_model("chat.ChatMessage")
    
    resources = ["code_interpreter", "file_search"]
    chat_messages = ChatMessage.objects.exclude(metadata={})
    for chat_message in chat_messages:
        file_ids = []
        for recource in resources:
            file_ids.extend(chat_message.metadata.get(recource, []))
        chat_message.metadata["openai_file_ids"] = list(set(file_ids))

    ChatMessage.objects.bulk_update(chat_messages, fields=["metadata",])

class Migration(migrations.Migration):

    dependencies = [
        ('chat', '0016_chatattachment'),
    ]

    operations = [
        migrations.RunPython(flatten_files_in_chat_message_metadata, reverse_code=migrations.RunPython.noop),
    ]
